/*
Jesus Galvan
Juan P. Mata jpm2873
*/

DESIGN

Design documents (named design.txt or design.pdf). Specifically, this must
include (i) your header format and (ii) a brief overview of all your functions in
each file.
⁃ After describing your header format, be sure to say why you made these
design decisions!
⁃ Your design document must also detail how you implemented reliable and
in-order delivery.
⁃ Your design document should detail how you tested your program (how
you modeled loss, corner cases you tried, etc).

HEADER

For our packet header we included: packet id , and file length.
This header is placed before the data in the following format:
'packet_id|len-' we used '|' and '-' as delimiters. Using the packet id 
we could easily keep track of what packets we have already recieved.
This makes Ording the packets very easy. Using the length field we 
know how much space is needed to fill the buffer.

We chose to implement it this way because this was the simplest way we 
could think of for keeping track of packets and assuring everything
is in order. We would keep track of what packet we were expecting and
if it didn't come there would be a timeout and the packet would be resent.

FUNCTIONS

getPacketID(char p[])

This function takes the packet and retrieves the packet ID.
Return: packet ID

getFileLenPacket(char p[])

This function takes the packet and retrieves the length field.
Return: length

getPacketData(char p[])

This function takes the packet and retrieves the data(actial content).
Return: data

alarmhand(int signal)

TEST

For testing with lost packets we just didn't send some packets and 
when the packets weren't received there would be a timeout and the 
packet would be resent.